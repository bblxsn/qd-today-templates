[
    {
        "request": {
            "method": "POST",
            "url": "{{flaresolverr_url}}",
            "headers": [
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "cookies": [],
            "data": "{\n  \"cmd\": \"request.get\",\n  \"url\":\"https://kp.m-team.cc/userdetails.php?id={{userid}}\",\n  \"cookies\": [{\"name\": \"tp\", \"value\": \"{{cookies_value_tp}}\", \"domain\": \"kp.m-team.cc\"}],\n  \"maxTimeout\": 60000\n}"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                }
            ],
            "failed_asserts": [
                {
                    "re": "https://kp.m-team.cc/login.php\\?returnto=",
                    "from": "content"
                },
                {
                    "re": "\"status\": \"error\"",
                    "from": "content"
                }
            ],
            "extract_variables": [
                {
                    "name": "title",
                    "re": ".*</title>",
                    "from": "content"
                },
                {
                    "name": "traffic",
                    "re": "color_ratio\\\\\"[\\s\\S]+color_active",
                    "from": "content"
                }
            ]
        }
    },
    {
        "comment": "字符串替换",
        "request": {
            "method": "POST",
            "url": "api://util/string/replace",
            "headers": [],
            "cookies": [],
            "data": "r=text&p=font&s={{regex_replace(regex_replace(unicode(traffic), \"([<>]|color_\\w+|font)\", \"\"), \"(class=)?\\\"(\\n)?\\\"?\") | replace(\"/\", \"\")|urlencode}}&t=tt"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                },
                {
                    "re": "\"状态\": \"OK\"",
                    "from": "content"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "__log__",
                    "re": ".*",
                    "from": "content"
                }
            ]
        }
    }
]