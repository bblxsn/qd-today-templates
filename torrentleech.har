[
    {
        "request": {
            "method": "POST",
            "url": "{{flaresolverr_url}}",
            "headers": [
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "cookies": [],
            "data": "{\n    \"cmd\": \"request.get\",\n    \"url\": \"https://www.torrentleech.org/torrents/browse/index\",\n    \"cookies\": [\n        {\n            \"name\": \"tluid\",\n            \"value\": \"{{tluid}}\",\n            \"domain\": \"www.torrentleech.org\"\n        },\n        {\n            \"name\": \"tlpass\",\n            \"value\": \"{{tlpass}}\",\n            \"domain\": \"www.torrentleech.org\"\n        }\n    ],\n    \"maxTimeout\": 60000\n}"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                }
            ],
            "failed_asserts": [
                {
                    "re": "Login",
                    "from": "content"
                }
            ],
            "extract_variables": [
                {
                    "name": "recheck_cnt",
                    "re": "Uploaded[\\s\\S]+Achievements",
                    "from": "content"
                },
                {
                    "name": "traffic",
                    "re": "分享率[:][\\s\\S]+当前活动",
                    "from": "content"
                }
            ]
        }
    },
    {
        "comment": "字符串替换",
        "request": {
            "method": "POST",
            "url": "api://util/string/replace",
            "headers": [],
            "cookies": [],
            "data": "r=text&p=当前活动&t=&s={{traffic | striptags}} {{regex_replace(recheck_cnt  | striptags, \"[><]\", \"\")}}"
        },
        "rule": {
            "success_asserts": [
                {
                    "re": "200",
                    "from": "status"
                },
                {
                    "re": "\"状态\": \"OK\"",
                    "from": "content"
                }
            ],
            "failed_asserts": [],
            "extract_variables": [
                {
                    "name": "__log__",
                    "re": ".*",
                    "from": "content"
                }
            ]
        }
    }
]